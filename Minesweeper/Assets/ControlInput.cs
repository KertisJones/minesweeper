//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/ControlInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlInput"",
    ""maps"": [
        {
            ""name"": ""InputMapX"",
            ""id"": ""106f31de-2a38-415a-aae7-f2498c6d62af"",
            ""actions"": [
                {
                    ""name"": ""PrimaryTouchContact"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8466cbd1-a081-4e8d-a2f2-695744b182ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""6a322186-348e-4c24-b18d-c1f794301236"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputPressPrimary"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cd820cab-0233-4b3a-aff9-e57d168a45aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputPressSecondary"",
                    ""type"": ""PassThrough"",
                    ""id"": ""da1f89cb-836a-4145-a814-364361084d07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputSecondaryDrag"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1c106e82-0648-4434-bf00-f655d69f5f92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b5392092-5c2e-469f-b48f-4910008bed7c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouchPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""90449ff4-de40-4037-9f8a-1a9239899ec5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouchPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ddd7b28c-cfca-40c8-af41-9a11d9c33816"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""742400be-12fa-4f02-bb8b-88efa25a98c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputPressDrag"",
                    ""type"": ""Button"",
                    ""id"": ""b548664a-fc84-492b-8bb1-d83163f92453"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""50162594-b06a-43f7-9d1f-1f712f9839e6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouchRadius"",
                    ""type"": ""PassThrough"",
                    ""id"": ""47ef974e-6b5e-4478-a242-e220f4191206"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""7fcdebe9-4956-4be9-9ff1-ee5f26c48868"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""dfc11ef4-238a-43cc-88ae-bd57a88dbe88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Space"",
                    ""type"": ""Button"",
                    ""id"": ""d6f11852-13c7-485d-956a-7da0698306c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tab"",
                    ""type"": ""Button"",
                    ""id"": ""48ef45a2-f296-4333-aa49-bfcc30a39f88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Backspace"",
                    ""type"": ""Button"",
                    ""id"": ""62cdac09-7124-49ea-9078-45792396a223"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Forward"",
                    ""type"": ""Button"",
                    ""id"": ""be678e48-800b-4509-baa7-faa4cd2b0183"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Backward"",
                    ""type"": ""Button"",
                    ""id"": ""d84b59b9-53b3-4168-badd-3cddf0199285"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""6eb28069-0000-4e3c-a937-4803a773b64f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""23b22bb4-454e-4387-b1c1-83e573c8efd5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b114447e-dfe9-411f-853c-4cc3f5e8e5ec"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5569542c-3d37-4af6-9515-14fa1c2e538f"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": ""Hold"",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""InputPressPrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8e192de-a467-4022-b437-a70e37640540"",
                    ""path"": ""<Pen>/press"",
                    ""interactions"": ""Hold"",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""InputPressPrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78e5943b-183f-4850-b4e1-304c6c7f9951"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputPressPrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88b6456d-8f37-432a-9fa3-32a3b302b73c"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b60388fc-3d66-4362-953b-804c15adfd83"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputPressSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f038d3e-8976-4724-83fb-e3dbb248ccec"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputPressSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b4c5252-9642-46fd-95d6-478a9b64e217"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5a9b55c-a0b2-4846-bc10-6f3731b6a067"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputPressDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b07f481c-dfe5-4aea-af87-f110a2c01a5f"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d789d9c8-6cd9-45ef-b794-d1be4d22cbae"",
                    ""path"": ""<VirtualMouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9449185-ef07-4df8-9ef0-debe2fe392fd"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6011238-d28f-457d-a543-05c31f2c3c33"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a4e9631-e29c-46e3-9c0a-7e8743950d20"",
                    ""path"": ""<Touchscreen>/primaryTouch/radius"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchRadius"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48606fda-84a5-4aa2-9576-3d16072aa00d"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputSecondaryDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3946324e-becd-4d6f-8a6c-4330cbd98aff"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputSecondaryDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b60698f-5321-415d-b371-6083b14dff12"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbe81c46-0fdd-4418-af07-12d08e2dcee4"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ede7cefd-326e-4ec9-9087-4420fe8eab0d"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5777b86-b563-4c2c-ba6c-6fa0148480a0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Space"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e038081-3c54-4df7-b7d4-b359c838a928"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72ed2058-2f2f-4725-828f-e52e1d4d3934"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backspace"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f43df67-0b89-40d0-ab0f-7f388aaf3bee"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0f95032-a50f-4fde-88d5-7256b1906918"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbf161dc-c5df-4046-8707-19e8bfd222c7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee4dba74-13a7-4516-bb8b-8fd360f12182"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56c81763-a6e6-49f1-a1d2-61c56ac30d0e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41c575ec-ea57-43e0-a794-0c93ddd21ca1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af8b48e3-2be2-4623-909c-18654cdf35f0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3e0e950-821a-4287-bc97-8bf9f5a5a485"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97293018-33ee-4c5e-8d01-32e4d7abbd2c"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TetrisweepMap"",
            ""id"": ""e06d8a4e-36aa-4997-ae39-c739a7266edd"",
            ""actions"": [
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""f6830078-347a-4309-845b-95c1f2899195"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""1a84c870-336f-4ebf-9dcb-d4b6acbfea9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateClockwise"",
                    ""type"": ""Button"",
                    ""id"": ""20995644-8c91-425a-bd1c-fa588678e726"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCounterClockwise"",
                    ""type"": ""Button"",
                    ""id"": ""b8b4058b-2907-4eae-9d24-49a04b1abecd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SoftDrop"",
                    ""type"": ""Button"",
                    ""id"": ""791ce69c-bfa7-4177-8e34-9658394783ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HardDrop"",
                    ""type"": ""Button"",
                    ""id"": ""c037d4a6-2060-4f84-9180-fa4629eb92c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold"",
                    ""type"": ""Button"",
                    ""id"": ""d8834114-2fef-44ed-aa7a-6cc68bdf8fcc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""42b8c44d-603a-4eeb-bb72-0f83a0a0b58e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""67201356-4986-4e45-b867-a67327bb40e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HardClear"",
                    ""type"": ""Button"",
                    ""id"": ""0fa7cd96-0c7f-4104-842a-180f21e0caf3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RevealTile"",
                    ""type"": ""Button"",
                    ""id"": ""fc3e733d-df83-4f45-ae4e-227ff33bb91b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlagTile"",
                    ""type"": ""Button"",
                    ""id"": ""11ffbcc9-dfe2-4ee7-897c-76d1c5959ecd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChordTile"",
                    ""type"": ""Button"",
                    ""id"": ""21efb4ff-75b6-4f57-9b07-4038c4be3829"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dac188d0-0e54-41a1-98d8-ae28de452b08"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e77d7b56-aa68-4868-9387-e9dee369373a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""51a69947-5563-4c48-91f6-acfdab2c09a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8a9da424-cccc-46ed-b6e5-d83a2e7bca95"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e2461f0-f467-4756-8535-2af206920dc5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f51a7ab-7a35-4532-b26e-91730e63e8bf"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b1de5b4-21ea-4901-8278-26a7c8e20a22"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15b8d995-13a7-4868-a36e-0f641a70589c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2ee550b-d0f9-41b9-8a94-3f5a4ca6ff0d"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f38ad9ea-1aa8-4740-9366-ffedac2b9eef"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b22e4d47-e751-48ac-8940-1bf6908e762b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fce20601-54d8-4b6f-af17-a1a04f51a4bd"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7367901-15c8-459b-bda7-70c3366f05b5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3682ddfc-7dea-4239-91b6-b5b04d312a1a"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d08b19d2-81cb-461c-bd76-2d2054dc88d7"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ffab601-0f53-4243-9496-b609078d1989"",
                    ""path"": ""<Keyboard>/numpad9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88cbae81-2564-4f79-9cb4-c67ca0fb8e9a"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCounterClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3c1d173-44e4-47dd-a25c-c28553b554b2"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCounterClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57bb58f9-fabf-4e59-a624-500b75d031ec"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCounterClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d64b4a9-e282-472d-8a17-831cd128fcc7"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCounterClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6419bf71-f63f-4c41-9cc8-43f09eef9af1"",
                    ""path"": ""<Keyboard>/numpad7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCounterClockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f8deb4a-faf2-4a3e-bfdb-adc685fd5e2f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SoftDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8a5a6de-2c21-4779-8d43-7681497fe465"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SoftDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6f611ad-95e1-4119-86d9-a24c53da765c"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SoftDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05261052-c1b8-4862-b02d-a476610ee0c8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HardDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6233189-819c-4f1a-a770-f6d38a3e5e03"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HardDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8807cb9c-193b-47bc-9c00-8dc9256e9d5f"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HardDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86dec761-a7df-43a5-8777-4fe23f7a24ef"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HardDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9503e5aa-737b-439d-a6ce-7564a4b0ebea"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9f27926-ab99-4d87-a8ac-a4fc195cae80"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c314b71a-6a88-4f69-bc1e-41230140af52"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18bfcb1f-e956-4039-927d-8bf875710d10"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dece4115-9bdc-41d8-b298-7114f37b59d5"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21d490bf-f0a2-4dc1-a2de-521afbb09aee"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95b46875-10c3-4b93-8692-6299f0a23811"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HardClear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""555b0b31-d204-480f-b4d4-14f42778a718"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HardClear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ea379b0-e4a9-4ecd-ba70-6842bfcdb50b"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HardClear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4bee3d2-2703-438c-af74-0667a7b010b1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RevealTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45d6d736-2b7c-4f49-9c46-aa5c0e2d7c34"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RevealTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06172794-1869-4138-abe7-09c38e5fb6ff"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlagTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27352509-aaec-4ce3-947c-ef944ea0bc49"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlagTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a78fa1e-4eb6-4d5a-b4d5-dff65feea682"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChordTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93f9e214-627f-4ce7-9c14-88ed280707b1"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66ebdd1b-02ec-46fc-b47b-19a0e35fab7a"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63239716-a157-400d-a125-074c05c08210"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d37f59ae-f6db-473f-96c5-f19509bd2c38"",
                    ""path"": ""<VirtualMouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InputMapX
        m_InputMapX = asset.FindActionMap("InputMapX", throwIfNotFound: true);
        m_InputMapX_PrimaryTouchContact = m_InputMapX.FindAction("PrimaryTouchContact", throwIfNotFound: true);
        m_InputMapX_SecondaryTouchContact = m_InputMapX.FindAction("SecondaryTouchContact", throwIfNotFound: true);
        m_InputMapX_InputPressPrimary = m_InputMapX.FindAction("InputPressPrimary", throwIfNotFound: true);
        m_InputMapX_InputPressSecondary = m_InputMapX.FindAction("InputPressSecondary", throwIfNotFound: true);
        m_InputMapX_InputSecondaryDrag = m_InputMapX.FindAction("InputSecondaryDrag", throwIfNotFound: true);
        m_InputMapX_MousePosition = m_InputMapX.FindAction("MousePosition", throwIfNotFound: true);
        m_InputMapX_PrimaryTouchPosition = m_InputMapX.FindAction("PrimaryTouchPosition", throwIfNotFound: true);
        m_InputMapX_SecondaryTouchPosition = m_InputMapX.FindAction("SecondaryTouchPosition", throwIfNotFound: true);
        m_InputMapX_AnyKey = m_InputMapX.FindAction("AnyKey", throwIfNotFound: true);
        m_InputMapX_InputPressDrag = m_InputMapX.FindAction("InputPressDrag", throwIfNotFound: true);
        m_InputMapX_InputScroll = m_InputMapX.FindAction("InputScroll", throwIfNotFound: true);
        m_InputMapX_PrimaryTouchRadius = m_InputMapX.FindAction("PrimaryTouchRadius", throwIfNotFound: true);
        m_InputMapX_Escape = m_InputMapX.FindAction("Escape", throwIfNotFound: true);
        m_InputMapX_Enter = m_InputMapX.FindAction("Enter", throwIfNotFound: true);
        m_InputMapX_Space = m_InputMapX.FindAction("Space", throwIfNotFound: true);
        m_InputMapX_Tab = m_InputMapX.FindAction("Tab", throwIfNotFound: true);
        m_InputMapX_Backspace = m_InputMapX.FindAction("Backspace", throwIfNotFound: true);
        m_InputMapX_Forward = m_InputMapX.FindAction("Forward", throwIfNotFound: true);
        m_InputMapX_Backward = m_InputMapX.FindAction("Backward", throwIfNotFound: true);
        m_InputMapX_Left = m_InputMapX.FindAction("Left", throwIfNotFound: true);
        m_InputMapX_Right = m_InputMapX.FindAction("Right", throwIfNotFound: true);
        // TetrisweepMap
        m_TetrisweepMap = asset.FindActionMap("TetrisweepMap", throwIfNotFound: true);
        m_TetrisweepMap_Left = m_TetrisweepMap.FindAction("Left", throwIfNotFound: true);
        m_TetrisweepMap_Right = m_TetrisweepMap.FindAction("Right", throwIfNotFound: true);
        m_TetrisweepMap_RotateClockwise = m_TetrisweepMap.FindAction("RotateClockwise", throwIfNotFound: true);
        m_TetrisweepMap_RotateCounterClockwise = m_TetrisweepMap.FindAction("RotateCounterClockwise", throwIfNotFound: true);
        m_TetrisweepMap_SoftDrop = m_TetrisweepMap.FindAction("SoftDrop", throwIfNotFound: true);
        m_TetrisweepMap_HardDrop = m_TetrisweepMap.FindAction("HardDrop", throwIfNotFound: true);
        m_TetrisweepMap_Hold = m_TetrisweepMap.FindAction("Hold", throwIfNotFound: true);
        m_TetrisweepMap_Escape = m_TetrisweepMap.FindAction("Escape", throwIfNotFound: true);
        m_TetrisweepMap_Restart = m_TetrisweepMap.FindAction("Restart", throwIfNotFound: true);
        m_TetrisweepMap_HardClear = m_TetrisweepMap.FindAction("HardClear", throwIfNotFound: true);
        m_TetrisweepMap_RevealTile = m_TetrisweepMap.FindAction("RevealTile", throwIfNotFound: true);
        m_TetrisweepMap_FlagTile = m_TetrisweepMap.FindAction("FlagTile", throwIfNotFound: true);
        m_TetrisweepMap_ChordTile = m_TetrisweepMap.FindAction("ChordTile", throwIfNotFound: true);
        m_TetrisweepMap_MousePosition = m_TetrisweepMap.FindAction("MousePosition", throwIfNotFound: true);
        m_TetrisweepMap_InputScroll = m_TetrisweepMap.FindAction("InputScroll", throwIfNotFound: true);
        m_TetrisweepMap_AnyKey = m_TetrisweepMap.FindAction("AnyKey", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InputMapX
    private readonly InputActionMap m_InputMapX;
    private IInputMapXActions m_InputMapXActionsCallbackInterface;
    private readonly InputAction m_InputMapX_PrimaryTouchContact;
    private readonly InputAction m_InputMapX_SecondaryTouchContact;
    private readonly InputAction m_InputMapX_InputPressPrimary;
    private readonly InputAction m_InputMapX_InputPressSecondary;
    private readonly InputAction m_InputMapX_InputSecondaryDrag;
    private readonly InputAction m_InputMapX_MousePosition;
    private readonly InputAction m_InputMapX_PrimaryTouchPosition;
    private readonly InputAction m_InputMapX_SecondaryTouchPosition;
    private readonly InputAction m_InputMapX_AnyKey;
    private readonly InputAction m_InputMapX_InputPressDrag;
    private readonly InputAction m_InputMapX_InputScroll;
    private readonly InputAction m_InputMapX_PrimaryTouchRadius;
    private readonly InputAction m_InputMapX_Escape;
    private readonly InputAction m_InputMapX_Enter;
    private readonly InputAction m_InputMapX_Space;
    private readonly InputAction m_InputMapX_Tab;
    private readonly InputAction m_InputMapX_Backspace;
    private readonly InputAction m_InputMapX_Forward;
    private readonly InputAction m_InputMapX_Backward;
    private readonly InputAction m_InputMapX_Left;
    private readonly InputAction m_InputMapX_Right;
    public struct InputMapXActions
    {
        private @ControlInput m_Wrapper;
        public InputMapXActions(@ControlInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @PrimaryTouchContact => m_Wrapper.m_InputMapX_PrimaryTouchContact;
        public InputAction @SecondaryTouchContact => m_Wrapper.m_InputMapX_SecondaryTouchContact;
        public InputAction @InputPressPrimary => m_Wrapper.m_InputMapX_InputPressPrimary;
        public InputAction @InputPressSecondary => m_Wrapper.m_InputMapX_InputPressSecondary;
        public InputAction @InputSecondaryDrag => m_Wrapper.m_InputMapX_InputSecondaryDrag;
        public InputAction @MousePosition => m_Wrapper.m_InputMapX_MousePosition;
        public InputAction @PrimaryTouchPosition => m_Wrapper.m_InputMapX_PrimaryTouchPosition;
        public InputAction @SecondaryTouchPosition => m_Wrapper.m_InputMapX_SecondaryTouchPosition;
        public InputAction @AnyKey => m_Wrapper.m_InputMapX_AnyKey;
        public InputAction @InputPressDrag => m_Wrapper.m_InputMapX_InputPressDrag;
        public InputAction @InputScroll => m_Wrapper.m_InputMapX_InputScroll;
        public InputAction @PrimaryTouchRadius => m_Wrapper.m_InputMapX_PrimaryTouchRadius;
        public InputAction @Escape => m_Wrapper.m_InputMapX_Escape;
        public InputAction @Enter => m_Wrapper.m_InputMapX_Enter;
        public InputAction @Space => m_Wrapper.m_InputMapX_Space;
        public InputAction @Tab => m_Wrapper.m_InputMapX_Tab;
        public InputAction @Backspace => m_Wrapper.m_InputMapX_Backspace;
        public InputAction @Forward => m_Wrapper.m_InputMapX_Forward;
        public InputAction @Backward => m_Wrapper.m_InputMapX_Backward;
        public InputAction @Left => m_Wrapper.m_InputMapX_Left;
        public InputAction @Right => m_Wrapper.m_InputMapX_Right;
        public InputActionMap Get() { return m_Wrapper.m_InputMapX; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputMapXActions set) { return set.Get(); }
        public void SetCallbacks(IInputMapXActions instance)
        {
            if (m_Wrapper.m_InputMapXActionsCallbackInterface != null)
            {
                @PrimaryTouchContact.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchContact;
                @PrimaryTouchContact.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchContact;
                @PrimaryTouchContact.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchContact;
                @SecondaryTouchContact.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSecondaryTouchContact;
                @SecondaryTouchContact.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSecondaryTouchContact;
                @SecondaryTouchContact.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSecondaryTouchContact;
                @InputPressPrimary.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressPrimary;
                @InputPressPrimary.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressPrimary;
                @InputPressPrimary.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressPrimary;
                @InputPressSecondary.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressSecondary;
                @InputPressSecondary.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressSecondary;
                @InputPressSecondary.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressSecondary;
                @InputSecondaryDrag.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputSecondaryDrag;
                @InputSecondaryDrag.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputSecondaryDrag;
                @InputSecondaryDrag.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputSecondaryDrag;
                @MousePosition.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnMousePosition;
                @PrimaryTouchPosition.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchPosition;
                @PrimaryTouchPosition.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchPosition;
                @PrimaryTouchPosition.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchPosition;
                @SecondaryTouchPosition.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSecondaryTouchPosition;
                @SecondaryTouchPosition.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSecondaryTouchPosition;
                @SecondaryTouchPosition.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSecondaryTouchPosition;
                @AnyKey.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnAnyKey;
                @AnyKey.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnAnyKey;
                @AnyKey.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnAnyKey;
                @InputPressDrag.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressDrag;
                @InputPressDrag.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressDrag;
                @InputPressDrag.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputPressDrag;
                @InputScroll.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputScroll;
                @InputScroll.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputScroll;
                @InputScroll.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnInputScroll;
                @PrimaryTouchRadius.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchRadius;
                @PrimaryTouchRadius.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchRadius;
                @PrimaryTouchRadius.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnPrimaryTouchRadius;
                @Escape.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnEscape;
                @Enter.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnEnter;
                @Space.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSpace;
                @Space.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSpace;
                @Space.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnSpace;
                @Tab.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnTab;
                @Tab.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnTab;
                @Tab.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnTab;
                @Backspace.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnBackspace;
                @Backspace.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnBackspace;
                @Backspace.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnBackspace;
                @Forward.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnForward;
                @Forward.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnForward;
                @Forward.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnForward;
                @Backward.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnBackward;
                @Backward.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnBackward;
                @Backward.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnBackward;
                @Left.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_InputMapXActionsCallbackInterface.OnRight;
            }
            m_Wrapper.m_InputMapXActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PrimaryTouchContact.started += instance.OnPrimaryTouchContact;
                @PrimaryTouchContact.performed += instance.OnPrimaryTouchContact;
                @PrimaryTouchContact.canceled += instance.OnPrimaryTouchContact;
                @SecondaryTouchContact.started += instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.performed += instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.canceled += instance.OnSecondaryTouchContact;
                @InputPressPrimary.started += instance.OnInputPressPrimary;
                @InputPressPrimary.performed += instance.OnInputPressPrimary;
                @InputPressPrimary.canceled += instance.OnInputPressPrimary;
                @InputPressSecondary.started += instance.OnInputPressSecondary;
                @InputPressSecondary.performed += instance.OnInputPressSecondary;
                @InputPressSecondary.canceled += instance.OnInputPressSecondary;
                @InputSecondaryDrag.started += instance.OnInputSecondaryDrag;
                @InputSecondaryDrag.performed += instance.OnInputSecondaryDrag;
                @InputSecondaryDrag.canceled += instance.OnInputSecondaryDrag;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @PrimaryTouchPosition.started += instance.OnPrimaryTouchPosition;
                @PrimaryTouchPosition.performed += instance.OnPrimaryTouchPosition;
                @PrimaryTouchPosition.canceled += instance.OnPrimaryTouchPosition;
                @SecondaryTouchPosition.started += instance.OnSecondaryTouchPosition;
                @SecondaryTouchPosition.performed += instance.OnSecondaryTouchPosition;
                @SecondaryTouchPosition.canceled += instance.OnSecondaryTouchPosition;
                @AnyKey.started += instance.OnAnyKey;
                @AnyKey.performed += instance.OnAnyKey;
                @AnyKey.canceled += instance.OnAnyKey;
                @InputPressDrag.started += instance.OnInputPressDrag;
                @InputPressDrag.performed += instance.OnInputPressDrag;
                @InputPressDrag.canceled += instance.OnInputPressDrag;
                @InputScroll.started += instance.OnInputScroll;
                @InputScroll.performed += instance.OnInputScroll;
                @InputScroll.canceled += instance.OnInputScroll;
                @PrimaryTouchRadius.started += instance.OnPrimaryTouchRadius;
                @PrimaryTouchRadius.performed += instance.OnPrimaryTouchRadius;
                @PrimaryTouchRadius.canceled += instance.OnPrimaryTouchRadius;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
                @Space.started += instance.OnSpace;
                @Space.performed += instance.OnSpace;
                @Space.canceled += instance.OnSpace;
                @Tab.started += instance.OnTab;
                @Tab.performed += instance.OnTab;
                @Tab.canceled += instance.OnTab;
                @Backspace.started += instance.OnBackspace;
                @Backspace.performed += instance.OnBackspace;
                @Backspace.canceled += instance.OnBackspace;
                @Forward.started += instance.OnForward;
                @Forward.performed += instance.OnForward;
                @Forward.canceled += instance.OnForward;
                @Backward.started += instance.OnBackward;
                @Backward.performed += instance.OnBackward;
                @Backward.canceled += instance.OnBackward;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
            }
        }
    }
    public InputMapXActions @InputMapX => new InputMapXActions(this);

    // TetrisweepMap
    private readonly InputActionMap m_TetrisweepMap;
    private ITetrisweepMapActions m_TetrisweepMapActionsCallbackInterface;
    private readonly InputAction m_TetrisweepMap_Left;
    private readonly InputAction m_TetrisweepMap_Right;
    private readonly InputAction m_TetrisweepMap_RotateClockwise;
    private readonly InputAction m_TetrisweepMap_RotateCounterClockwise;
    private readonly InputAction m_TetrisweepMap_SoftDrop;
    private readonly InputAction m_TetrisweepMap_HardDrop;
    private readonly InputAction m_TetrisweepMap_Hold;
    private readonly InputAction m_TetrisweepMap_Escape;
    private readonly InputAction m_TetrisweepMap_Restart;
    private readonly InputAction m_TetrisweepMap_HardClear;
    private readonly InputAction m_TetrisweepMap_RevealTile;
    private readonly InputAction m_TetrisweepMap_FlagTile;
    private readonly InputAction m_TetrisweepMap_ChordTile;
    private readonly InputAction m_TetrisweepMap_MousePosition;
    private readonly InputAction m_TetrisweepMap_InputScroll;
    private readonly InputAction m_TetrisweepMap_AnyKey;
    public struct TetrisweepMapActions
    {
        private @ControlInput m_Wrapper;
        public TetrisweepMapActions(@ControlInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Left => m_Wrapper.m_TetrisweepMap_Left;
        public InputAction @Right => m_Wrapper.m_TetrisweepMap_Right;
        public InputAction @RotateClockwise => m_Wrapper.m_TetrisweepMap_RotateClockwise;
        public InputAction @RotateCounterClockwise => m_Wrapper.m_TetrisweepMap_RotateCounterClockwise;
        public InputAction @SoftDrop => m_Wrapper.m_TetrisweepMap_SoftDrop;
        public InputAction @HardDrop => m_Wrapper.m_TetrisweepMap_HardDrop;
        public InputAction @Hold => m_Wrapper.m_TetrisweepMap_Hold;
        public InputAction @Escape => m_Wrapper.m_TetrisweepMap_Escape;
        public InputAction @Restart => m_Wrapper.m_TetrisweepMap_Restart;
        public InputAction @HardClear => m_Wrapper.m_TetrisweepMap_HardClear;
        public InputAction @RevealTile => m_Wrapper.m_TetrisweepMap_RevealTile;
        public InputAction @FlagTile => m_Wrapper.m_TetrisweepMap_FlagTile;
        public InputAction @ChordTile => m_Wrapper.m_TetrisweepMap_ChordTile;
        public InputAction @MousePosition => m_Wrapper.m_TetrisweepMap_MousePosition;
        public InputAction @InputScroll => m_Wrapper.m_TetrisweepMap_InputScroll;
        public InputAction @AnyKey => m_Wrapper.m_TetrisweepMap_AnyKey;
        public InputActionMap Get() { return m_Wrapper.m_TetrisweepMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TetrisweepMapActions set) { return set.Get(); }
        public void SetCallbacks(ITetrisweepMapActions instance)
        {
            if (m_Wrapper.m_TetrisweepMapActionsCallbackInterface != null)
            {
                @Left.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRight;
                @RotateClockwise.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateClockwise;
                @RotateClockwise.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateClockwise;
                @RotateClockwise.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateClockwise;
                @RotateCounterClockwise.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateCounterClockwise;
                @RotateCounterClockwise.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateCounterClockwise;
                @RotateCounterClockwise.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateCounterClockwise;
                @SoftDrop.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnSoftDrop;
                @SoftDrop.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnSoftDrop;
                @SoftDrop.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnSoftDrop;
                @HardDrop.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardDrop;
                @HardDrop.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardDrop;
                @HardDrop.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardDrop;
                @Hold.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHold;
                @Hold.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHold;
                @Hold.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHold;
                @Escape.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnEscape;
                @Restart.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRestart;
                @Restart.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRestart;
                @Restart.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRestart;
                @HardClear.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardClear;
                @HardClear.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardClear;
                @HardClear.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardClear;
                @RevealTile.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRevealTile;
                @RevealTile.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRevealTile;
                @RevealTile.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRevealTile;
                @FlagTile.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnFlagTile;
                @FlagTile.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnFlagTile;
                @FlagTile.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnFlagTile;
                @ChordTile.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnChordTile;
                @ChordTile.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnChordTile;
                @ChordTile.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnChordTile;
                @MousePosition.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnMousePosition;
                @InputScroll.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnInputScroll;
                @InputScroll.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnInputScroll;
                @InputScroll.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnInputScroll;
                @AnyKey.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnAnyKey;
                @AnyKey.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnAnyKey;
                @AnyKey.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnAnyKey;
            }
            m_Wrapper.m_TetrisweepMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @RotateClockwise.started += instance.OnRotateClockwise;
                @RotateClockwise.performed += instance.OnRotateClockwise;
                @RotateClockwise.canceled += instance.OnRotateClockwise;
                @RotateCounterClockwise.started += instance.OnRotateCounterClockwise;
                @RotateCounterClockwise.performed += instance.OnRotateCounterClockwise;
                @RotateCounterClockwise.canceled += instance.OnRotateCounterClockwise;
                @SoftDrop.started += instance.OnSoftDrop;
                @SoftDrop.performed += instance.OnSoftDrop;
                @SoftDrop.canceled += instance.OnSoftDrop;
                @HardDrop.started += instance.OnHardDrop;
                @HardDrop.performed += instance.OnHardDrop;
                @HardDrop.canceled += instance.OnHardDrop;
                @Hold.started += instance.OnHold;
                @Hold.performed += instance.OnHold;
                @Hold.canceled += instance.OnHold;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @Restart.started += instance.OnRestart;
                @Restart.performed += instance.OnRestart;
                @Restart.canceled += instance.OnRestart;
                @HardClear.started += instance.OnHardClear;
                @HardClear.performed += instance.OnHardClear;
                @HardClear.canceled += instance.OnHardClear;
                @RevealTile.started += instance.OnRevealTile;
                @RevealTile.performed += instance.OnRevealTile;
                @RevealTile.canceled += instance.OnRevealTile;
                @FlagTile.started += instance.OnFlagTile;
                @FlagTile.performed += instance.OnFlagTile;
                @FlagTile.canceled += instance.OnFlagTile;
                @ChordTile.started += instance.OnChordTile;
                @ChordTile.performed += instance.OnChordTile;
                @ChordTile.canceled += instance.OnChordTile;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @InputScroll.started += instance.OnInputScroll;
                @InputScroll.performed += instance.OnInputScroll;
                @InputScroll.canceled += instance.OnInputScroll;
                @AnyKey.started += instance.OnAnyKey;
                @AnyKey.performed += instance.OnAnyKey;
                @AnyKey.canceled += instance.OnAnyKey;
            }
        }
    }
    public TetrisweepMapActions @TetrisweepMap => new TetrisweepMapActions(this);
    public interface IInputMapXActions
    {
        void OnPrimaryTouchContact(InputAction.CallbackContext context);
        void OnSecondaryTouchContact(InputAction.CallbackContext context);
        void OnInputPressPrimary(InputAction.CallbackContext context);
        void OnInputPressSecondary(InputAction.CallbackContext context);
        void OnInputSecondaryDrag(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnPrimaryTouchPosition(InputAction.CallbackContext context);
        void OnSecondaryTouchPosition(InputAction.CallbackContext context);
        void OnAnyKey(InputAction.CallbackContext context);
        void OnInputPressDrag(InputAction.CallbackContext context);
        void OnInputScroll(InputAction.CallbackContext context);
        void OnPrimaryTouchRadius(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnSpace(InputAction.CallbackContext context);
        void OnTab(InputAction.CallbackContext context);
        void OnBackspace(InputAction.CallbackContext context);
        void OnForward(InputAction.CallbackContext context);
        void OnBackward(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
    }
    public interface ITetrisweepMapActions
    {
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnRotateClockwise(InputAction.CallbackContext context);
        void OnRotateCounterClockwise(InputAction.CallbackContext context);
        void OnSoftDrop(InputAction.CallbackContext context);
        void OnHardDrop(InputAction.CallbackContext context);
        void OnHold(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnRestart(InputAction.CallbackContext context);
        void OnHardClear(InputAction.CallbackContext context);
        void OnRevealTile(InputAction.CallbackContext context);
        void OnFlagTile(InputAction.CallbackContext context);
        void OnChordTile(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnInputScroll(InputAction.CallbackContext context);
        void OnAnyKey(InputAction.CallbackContext context);
    }
}
