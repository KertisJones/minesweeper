//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/InputManagement/ControlInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlInput"",
    ""maps"": [
        {
            ""name"": ""TetrisweepMap"",
            ""id"": ""e06d8a4e-36aa-4997-ae39-c739a7266edd"",
            ""actions"": [
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""f6830078-347a-4309-845b-95c1f2899195"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""1a84c870-336f-4ebf-9dcb-d4b6acbfea9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate Clockwise"",
                    ""type"": ""Button"",
                    ""id"": ""20995644-8c91-425a-bd1c-fa588678e726"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate Counter-Clockwise"",
                    ""type"": ""Button"",
                    ""id"": ""b8b4058b-2907-4eae-9d24-49a04b1abecd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Soft Drop"",
                    ""type"": ""Button"",
                    ""id"": ""791ce69c-bfa7-4177-8e34-9658394783ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hard Drop"",
                    ""type"": ""Button"",
                    ""id"": ""c037d4a6-2060-4f84-9180-fa4629eb92c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold"",
                    ""type"": ""Button"",
                    ""id"": ""d8834114-2fef-44ed-aa7a-6cc68bdf8fcc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""42b8c44d-603a-4eeb-bb72-0f83a0a0b58e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""67201356-4986-4e45-b867-a67327bb40e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hard Clear"",
                    ""type"": ""Button"",
                    ""id"": ""0fa7cd96-0c7f-4104-842a-180f21e0caf3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reveal Tile"",
                    ""type"": ""Button"",
                    ""id"": ""fc3e733d-df83-4f45-ae4e-227ff33bb91b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Flag Tile"",
                    ""type"": ""Button"",
                    ""id"": ""11ffbcc9-dfe2-4ee7-897c-76d1c5959ecd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dac188d0-0e54-41a1-98d8-ae28de452b08"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e77d7b56-aa68-4868-9387-e9dee369373a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""51a69947-5563-4c48-91f6-acfdab2c09a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cleanse"",
                    ""type"": ""Button"",
                    ""id"": ""9a960323-2b5a-4b20-869f-660b51c7d236"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8a9da424-cccc-46ed-b6e5-d83a2e7bca95"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e2461f0-f467-4756-8535-2af206920dc5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f51a7ab-7a35-4532-b26e-91730e63e8bf"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b1de5b4-21ea-4901-8278-26a7c8e20a22"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15b8d995-13a7-4868-a36e-0f641a70589c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2ee550b-d0f9-41b9-8a94-3f5a4ca6ff0d"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f38ad9ea-1aa8-4740-9366-ffedac2b9eef"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b22e4d47-e751-48ac-8940-1bf6908e762b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fce20601-54d8-4b6f-af17-a1a04f51a4bd"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7367901-15c8-459b-bda7-70c3366f05b5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3682ddfc-7dea-4239-91b6-b5b04d312a1a"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d08b19d2-81cb-461c-bd76-2d2054dc88d7"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ffab601-0f53-4243-9496-b609078d1989"",
                    ""path"": ""<Keyboard>/numpad9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88cbae81-2564-4f79-9cb4-c67ca0fb8e9a"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Counter-Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3c1d173-44e4-47dd-a25c-c28553b554b2"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Counter-Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57bb58f9-fabf-4e59-a624-500b75d031ec"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Counter-Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d64b4a9-e282-472d-8a17-831cd128fcc7"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Counter-Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6419bf71-f63f-4c41-9cc8-43f09eef9af1"",
                    ""path"": ""<Keyboard>/numpad7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate Counter-Clockwise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f8deb4a-faf2-4a3e-bfdb-adc685fd5e2f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Soft Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8a5a6de-2c21-4779-8d43-7681497fe465"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Soft Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6f611ad-95e1-4119-86d9-a24c53da765c"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Soft Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05261052-c1b8-4862-b02d-a476610ee0c8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hard Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6233189-819c-4f1a-a770-f6d38a3e5e03"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hard Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8807cb9c-193b-47bc-9c00-8dc9256e9d5f"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hard Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86dec761-a7df-43a5-8777-4fe23f7a24ef"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hard Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9503e5aa-737b-439d-a6ce-7564a4b0ebea"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9f27926-ab99-4d87-a8ac-a4fc195cae80"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c314b71a-6a88-4f69-bc1e-41230140af52"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dece4115-9bdc-41d8-b298-7114f37b59d5"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21d490bf-f0a2-4dc1-a2de-521afbb09aee"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95b46875-10c3-4b93-8692-6299f0a23811"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hard Clear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""555b0b31-d204-480f-b4d4-14f42778a718"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hard Clear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ea379b0-e4a9-4ecd-ba70-6842bfcdb50b"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hard Clear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4bee3d2-2703-438c-af74-0667a7b010b1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reveal Tile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45d6d736-2b7c-4f49-9c46-aa5c0e2d7c34"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reveal Tile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06172794-1869-4138-abe7-09c38e5fb6ff"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flag Tile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd94f963-7eed-4724-8641-5ed34d3931e8"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flag Tile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27352509-aaec-4ce3-947c-ef944ea0bc49"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flag Tile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93f9e214-627f-4ce7-9c14-88ed280707b1"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66ebdd1b-02ec-46fc-b47b-19a0e35fab7a"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63239716-a157-400d-a125-074c05c08210"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d37f59ae-f6db-473f-96c5-f19509bd2c38"",
                    ""path"": ""<VirtualMouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b25ad541-2970-4097-a44b-01c2510bc12b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cleanse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebe8d2b5-51dd-4809-88ce-992697fe3afe"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cleanse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""ca4f5542-9c1d-4816-958f-b061d2ad6da3"",
            ""actions"": [],
            ""bindings"": []
        }
    ],
    ""controlSchemes"": []
}");
        // TetrisweepMap
        m_TetrisweepMap = asset.FindActionMap("TetrisweepMap", throwIfNotFound: true);
        m_TetrisweepMap_Left = m_TetrisweepMap.FindAction("Left", throwIfNotFound: true);
        m_TetrisweepMap_Right = m_TetrisweepMap.FindAction("Right", throwIfNotFound: true);
        m_TetrisweepMap_RotateClockwise = m_TetrisweepMap.FindAction("Rotate Clockwise", throwIfNotFound: true);
        m_TetrisweepMap_RotateCounterClockwise = m_TetrisweepMap.FindAction("Rotate Counter-Clockwise", throwIfNotFound: true);
        m_TetrisweepMap_SoftDrop = m_TetrisweepMap.FindAction("Soft Drop", throwIfNotFound: true);
        m_TetrisweepMap_HardDrop = m_TetrisweepMap.FindAction("Hard Drop", throwIfNotFound: true);
        m_TetrisweepMap_Hold = m_TetrisweepMap.FindAction("Hold", throwIfNotFound: true);
        m_TetrisweepMap_Escape = m_TetrisweepMap.FindAction("Escape", throwIfNotFound: true);
        m_TetrisweepMap_Restart = m_TetrisweepMap.FindAction("Restart", throwIfNotFound: true);
        m_TetrisweepMap_HardClear = m_TetrisweepMap.FindAction("Hard Clear", throwIfNotFound: true);
        m_TetrisweepMap_RevealTile = m_TetrisweepMap.FindAction("Reveal Tile", throwIfNotFound: true);
        m_TetrisweepMap_FlagTile = m_TetrisweepMap.FindAction("Flag Tile", throwIfNotFound: true);
        m_TetrisweepMap_MousePosition = m_TetrisweepMap.FindAction("MousePosition", throwIfNotFound: true);
        m_TetrisweepMap_InputScroll = m_TetrisweepMap.FindAction("InputScroll", throwIfNotFound: true);
        m_TetrisweepMap_AnyKey = m_TetrisweepMap.FindAction("AnyKey", throwIfNotFound: true);
        m_TetrisweepMap_Cleanse = m_TetrisweepMap.FindAction("Cleanse", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // TetrisweepMap
    private readonly InputActionMap m_TetrisweepMap;
    private ITetrisweepMapActions m_TetrisweepMapActionsCallbackInterface;
    private readonly InputAction m_TetrisweepMap_Left;
    private readonly InputAction m_TetrisweepMap_Right;
    private readonly InputAction m_TetrisweepMap_RotateClockwise;
    private readonly InputAction m_TetrisweepMap_RotateCounterClockwise;
    private readonly InputAction m_TetrisweepMap_SoftDrop;
    private readonly InputAction m_TetrisweepMap_HardDrop;
    private readonly InputAction m_TetrisweepMap_Hold;
    private readonly InputAction m_TetrisweepMap_Escape;
    private readonly InputAction m_TetrisweepMap_Restart;
    private readonly InputAction m_TetrisweepMap_HardClear;
    private readonly InputAction m_TetrisweepMap_RevealTile;
    private readonly InputAction m_TetrisweepMap_FlagTile;
    private readonly InputAction m_TetrisweepMap_MousePosition;
    private readonly InputAction m_TetrisweepMap_InputScroll;
    private readonly InputAction m_TetrisweepMap_AnyKey;
    private readonly InputAction m_TetrisweepMap_Cleanse;
    public struct TetrisweepMapActions
    {
        private @ControlInput m_Wrapper;
        public TetrisweepMapActions(@ControlInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Left => m_Wrapper.m_TetrisweepMap_Left;
        public InputAction @Right => m_Wrapper.m_TetrisweepMap_Right;
        public InputAction @RotateClockwise => m_Wrapper.m_TetrisweepMap_RotateClockwise;
        public InputAction @RotateCounterClockwise => m_Wrapper.m_TetrisweepMap_RotateCounterClockwise;
        public InputAction @SoftDrop => m_Wrapper.m_TetrisweepMap_SoftDrop;
        public InputAction @HardDrop => m_Wrapper.m_TetrisweepMap_HardDrop;
        public InputAction @Hold => m_Wrapper.m_TetrisweepMap_Hold;
        public InputAction @Escape => m_Wrapper.m_TetrisweepMap_Escape;
        public InputAction @Restart => m_Wrapper.m_TetrisweepMap_Restart;
        public InputAction @HardClear => m_Wrapper.m_TetrisweepMap_HardClear;
        public InputAction @RevealTile => m_Wrapper.m_TetrisweepMap_RevealTile;
        public InputAction @FlagTile => m_Wrapper.m_TetrisweepMap_FlagTile;
        public InputAction @MousePosition => m_Wrapper.m_TetrisweepMap_MousePosition;
        public InputAction @InputScroll => m_Wrapper.m_TetrisweepMap_InputScroll;
        public InputAction @AnyKey => m_Wrapper.m_TetrisweepMap_AnyKey;
        public InputAction @Cleanse => m_Wrapper.m_TetrisweepMap_Cleanse;
        public InputActionMap Get() { return m_Wrapper.m_TetrisweepMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TetrisweepMapActions set) { return set.Get(); }
        public void SetCallbacks(ITetrisweepMapActions instance)
        {
            if (m_Wrapper.m_TetrisweepMapActionsCallbackInterface != null)
            {
                @Left.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRight;
                @RotateClockwise.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateClockwise;
                @RotateClockwise.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateClockwise;
                @RotateClockwise.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateClockwise;
                @RotateCounterClockwise.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateCounterClockwise;
                @RotateCounterClockwise.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateCounterClockwise;
                @RotateCounterClockwise.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRotateCounterClockwise;
                @SoftDrop.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnSoftDrop;
                @SoftDrop.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnSoftDrop;
                @SoftDrop.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnSoftDrop;
                @HardDrop.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardDrop;
                @HardDrop.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardDrop;
                @HardDrop.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardDrop;
                @Hold.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHold;
                @Hold.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHold;
                @Hold.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHold;
                @Escape.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnEscape;
                @Restart.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRestart;
                @Restart.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRestart;
                @Restart.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRestart;
                @HardClear.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardClear;
                @HardClear.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardClear;
                @HardClear.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnHardClear;
                @RevealTile.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRevealTile;
                @RevealTile.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRevealTile;
                @RevealTile.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnRevealTile;
                @FlagTile.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnFlagTile;
                @FlagTile.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnFlagTile;
                @FlagTile.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnFlagTile;
                @MousePosition.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnMousePosition;
                @InputScroll.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnInputScroll;
                @InputScroll.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnInputScroll;
                @InputScroll.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnInputScroll;
                @AnyKey.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnAnyKey;
                @AnyKey.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnAnyKey;
                @AnyKey.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnAnyKey;
                @Cleanse.started -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnCleanse;
                @Cleanse.performed -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnCleanse;
                @Cleanse.canceled -= m_Wrapper.m_TetrisweepMapActionsCallbackInterface.OnCleanse;
            }
            m_Wrapper.m_TetrisweepMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @RotateClockwise.started += instance.OnRotateClockwise;
                @RotateClockwise.performed += instance.OnRotateClockwise;
                @RotateClockwise.canceled += instance.OnRotateClockwise;
                @RotateCounterClockwise.started += instance.OnRotateCounterClockwise;
                @RotateCounterClockwise.performed += instance.OnRotateCounterClockwise;
                @RotateCounterClockwise.canceled += instance.OnRotateCounterClockwise;
                @SoftDrop.started += instance.OnSoftDrop;
                @SoftDrop.performed += instance.OnSoftDrop;
                @SoftDrop.canceled += instance.OnSoftDrop;
                @HardDrop.started += instance.OnHardDrop;
                @HardDrop.performed += instance.OnHardDrop;
                @HardDrop.canceled += instance.OnHardDrop;
                @Hold.started += instance.OnHold;
                @Hold.performed += instance.OnHold;
                @Hold.canceled += instance.OnHold;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @Restart.started += instance.OnRestart;
                @Restart.performed += instance.OnRestart;
                @Restart.canceled += instance.OnRestart;
                @HardClear.started += instance.OnHardClear;
                @HardClear.performed += instance.OnHardClear;
                @HardClear.canceled += instance.OnHardClear;
                @RevealTile.started += instance.OnRevealTile;
                @RevealTile.performed += instance.OnRevealTile;
                @RevealTile.canceled += instance.OnRevealTile;
                @FlagTile.started += instance.OnFlagTile;
                @FlagTile.performed += instance.OnFlagTile;
                @FlagTile.canceled += instance.OnFlagTile;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @InputScroll.started += instance.OnInputScroll;
                @InputScroll.performed += instance.OnInputScroll;
                @InputScroll.canceled += instance.OnInputScroll;
                @AnyKey.started += instance.OnAnyKey;
                @AnyKey.performed += instance.OnAnyKey;
                @AnyKey.canceled += instance.OnAnyKey;
                @Cleanse.started += instance.OnCleanse;
                @Cleanse.performed += instance.OnCleanse;
                @Cleanse.canceled += instance.OnCleanse;
            }
        }
    }
    public TetrisweepMapActions @TetrisweepMap => new TetrisweepMapActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    public struct MenuActions
    {
        private @ControlInput m_Wrapper;
        public MenuActions(@ControlInput wrapper) { m_Wrapper = wrapper; }
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    public interface ITetrisweepMapActions
    {
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnRotateClockwise(InputAction.CallbackContext context);
        void OnRotateCounterClockwise(InputAction.CallbackContext context);
        void OnSoftDrop(InputAction.CallbackContext context);
        void OnHardDrop(InputAction.CallbackContext context);
        void OnHold(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnRestart(InputAction.CallbackContext context);
        void OnHardClear(InputAction.CallbackContext context);
        void OnRevealTile(InputAction.CallbackContext context);
        void OnFlagTile(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnInputScroll(InputAction.CallbackContext context);
        void OnAnyKey(InputAction.CallbackContext context);
        void OnCleanse(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
    }
}
